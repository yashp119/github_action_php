name: Build, SonarQube Scan, and Email

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Upload SonarQube Report
        uses: actions/upload-artifact@v2
        with:
          name: sonarqube-report
          path: .scannerwork/report-task.txt

  main:
    name: Create PR Release to Main
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}

      # Your existing steps for the main job...

      - name: Wait for PR Approval
        id: wait_for_approval
        run: echo "Waiting for PR approval"

  wait_for_reviewer_approval:
    name: Wait for Reviewer Approval
    runs-on: ubuntu-latest
    needs: main
    if: github.event_name == 'workflow_run' && github.event.workflow == 'Build, SonarQube Scan, and Email'
    steps:
      - name: Wait for Reviewer Approval
        id: wait_for_reviewer_approval
        run: echo "Waiting for reviewer approval"

  email:
    name: Send SonarQube Report via Email
    runs-on: ubuntu-latest
    needs: [wait_for_reviewer_approval, build]
    if: github.event_name == 'workflow_run' && github.event.workflow == 'Build, SonarQube Scan, and Email' && needs.wait_for_reviewer_approval.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download SonarQube Report Artifact
        uses: actions/download-artifact@v2
        with:
          name: sonarqube-report

      - name: Fetch SonarQube Issues
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
            "${{ secrets.SONAR_HOST_URL }}/api/issues/search?componentKeys=testing-sonar&resolved=false" \
            -o sonarqube-issues.json
          
      - name: Send SonarQube Report via Email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: SonarQube Report
          body: email-body.txt
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          attachments: sonarqube-issues.json
          content_type: application/json
