name: Build, SonarQube Scan, and Email

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Upload SonarQube Report
        uses: actions/upload-artifact@v2
        with:
          name: sonarqube-report
          path: .scannerwork/report-task.txt

  request_review:
    name: Request Review
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Fetch Reviewers
        run: |
          curl -sSL "https://raw.githubusercontent.com/${{ github.repository }}/main/reviewers.txt" > reviewers.txt

      - name: Request Reviewers
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviewers = require('./reviewers.txt').trim().split('\n');
            const response = await github.pulls.createReviewRequest({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              reviewers: reviewers
            });
            console.log(response);

  wait_for_review_approval:
    name: Wait for Review Approval
    runs-on: ubuntu-latest
    needs: [request_review]
    if: github.event_name == 'pull_request'
    steps:
      - name: Wait for Review Approval
        id: wait_for_approval
        run: echo "Waiting for review approval..."
        timeout-minutes: 60

  merge_on_approval:
    name: Merge on Review Approval
    runs-on: ubuntu-latest
    needs: [wait_for_review_approval]
    if: github.event_name == 'pull_request' && steps.wait_for_approval.outputs.result == 'success'
    steps:
      - name: Merge on Review Approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            console.log(response);

  email:
    name: Send SonarQube Report via Email
    runs-on: ubuntu-latest
    needs: [merge_on_approval]
    if: github.event_name == 'pull_request' && steps.merge_on_approval.outputs.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download SonarQube Report Artifact
        uses: actions/download-artifact@v2
        with:
          name: sonarqube-report

      - name: Fetch SonarQube Issues
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
            "${{ secrets.SONAR_HOST_URL }}/api/issues/search?componentKeys=testing-sonar&resolved=false" \
            -o sonarqube-issues.json

      - name: Send SonarQube Report via Email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: SonarQube Report
          body: email-body.txt
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          attachments: sonarqube-issues.json
          content_type: application/json
