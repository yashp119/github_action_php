name: Build, SonarQube Scan, and Email

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Upload SonarQube Report
        uses: actions/upload-artifact@v2
        with:
          name: sonarqube-report
          path: .scannerwork/report-task.txt

  main:
    name: Create PR Release to Main
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}

      - name: Add Reviewer
        id: add_reviewer
        run: |
          response=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers" \
            -d '{
                  "reviewers": ["triniha"]
                }')
          echo "::set-output name=response::${response}"

      - name: Create Check Run
        id: create_check_run
        run: echo "::set-output name=check_run_id::$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/check-runs" \
            -d '{
                  "name": "manual-approval",
                  "head_sha": "${{ github.sha }}",
                  "status": "in_progress"
                }' | jq -r '.id')"

      - name: Wait for Manual Approval
        id: wait_for_approval
        run: echo "Waiting for manual approval"
        
  email:
    name: Send SonarQube Report via Email
    runs-on: ubuntu-latest
    needs: [main, build]
    if: ${{ needs.main.result == 'success' && needs.build.result == 'success' && needs.main.outputs.add_reviewer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download SonarQube Report Artifact
        uses: actions/download-artifact@v2
        with:
          name: sonarqube-report

      - name: Fetch SonarQube Issues
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
            "${{ secrets.SONAR_HOST_URL }}/api/issues/search?componentKeys=testing-sonar&resolved=false" \
            -o sonarqube-issues.json

      - name: Send SonarQube Report via Email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: SonarQube Report
          body: email-body.txt
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          attachments: sonarqube-issues.json
          content_type: application/json

      - name: Complete Check Run
        if: success()
        run: curl -s -X PATCH \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/check-runs/${{ steps.create_check_run.outputs.check_run_id }}" \
          -d '{
                "status": "completed",
                "conclusion": "success"
            }'
